@tailwind base;
@tailwind components;
@tailwind utilities;

/* Definition of the design system. All colors, gradients, fonts, etc should be defined here. 
All colors MUST be HSL.
*/

@layer base {
  :root {
    --background: 0 0% 100%;
    --foreground: 222.2 84% 4.9%;

    --card: 0 0% 100%;
    --card-foreground: 222.2 84% 4.9%;

    --popover: 0 0% 100%;
    --popover-foreground: 222.2 84% 4.9%;

    --primary: 222.2 47.4% 11.2%;
    --primary-foreground: 210 40% 98%;

    --secondary: 210 40% 96.1%;
    --secondary-foreground: 222.2 47.4% 11.2%;

    --muted: 210 40% 96.1%;
    --muted-foreground: 215.4 16.3% 46.9%;

    --accent: 210 40% 96.1%;
    --accent-foreground: 222.2 47.4% 11.2%;

    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 210 40% 98%;

    --border: 214.3 31.8% 91.4%;
    --input: 214.3 31.8% 91.4%;
    --ring: 222.2 84% 4.9%;

    --radius: 0.5rem;

    --sidebar-background: 0 0% 98%;

    --sidebar-foreground: 240 5.3% 26.1%;

    --sidebar-primary: 240 5.9% 10%;

    --sidebar-primary-foreground: 0 0% 98%;

    --sidebar-accent: 240 4.8% 95.9%;

    --sidebar-accent-foreground: 240 5.9% 10%;

    --sidebar-border: 220 13% 91%;

    --sidebar-ring: 217.2 91.2% 59.8%;

    /* QA status tokens */
    --qa-pass: 142.1 70.6% 45.3%;
    --qa-fail: 0 84.2% 60.2%;
    --qa-partial: 24.6 95% 53.1%;
    --qa-pending: 217.2 11.1% 45.9%;

    /* QA action button tokens */
    --qa-btn-reject: 0 72.2% 50.6%;
    --qa-btn-partial: 47.9 95.8% 53.1%;
    --qa-btn-accept: 142.1 76.2% 36.3%;
  }

  .dark {
    --background: 222.2 84% 4.9%;
    --foreground: 210 40% 98%;

    --card: 222.2 84% 4.9%;
    --card-foreground: 210 40% 98%;

    --popover: 222.2 84% 4.9%;
    --popover-foreground: 210 40% 98%;

    --primary: 210 40% 98%;
    --primary-foreground: 222.2 47.4% 11.2%;

    --secondary: 217.2 32.6% 17.5%;
    --secondary-foreground: 210 40% 98%;

    --muted: 217.2 32.6% 17.5%;
    --muted-foreground: 215 20.2% 65.1%;

    --accent: 217.2 32.6% 17.5%;
    --accent-foreground: 210 40% 98%;

    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 210 40% 98%;

    --border: 217.2 32.6% 17.5%;
    --input: 217.2 32.6% 17.5%;
    --ring: 212.7 26.8% 83.9%;
    --sidebar-background: 240 5.9% 10%;
    --sidebar-foreground: 240 4.8% 95.9%;
    --sidebar-primary: 224.3 76.3% 48%;
    --sidebar-primary-foreground: 0 0% 100%;
    --sidebar-accent: 240 3.7% 15.9%;
    --sidebar-accent-foreground: 240 4.8% 95.9%;
    --sidebar-border: 240 3.7% 15.9%;
    --sidebar-ring: 217.2 91.2% 59.8%;
  }
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply bg-background text-foreground;
  }
}

@layer components {
  /* Status pills */
  .qa-pill {
    @apply px-2 py-1 rounded-full text-xs border;
  }
  .qa-pill--pass {
    color: hsl(var(--qa-pass));
    background-color: hsl(var(--qa-pass) / 0.12);
    border-color: hsl(var(--qa-pass) / 0.3);
  }
  .qa-pill--fail {
    color: hsl(var(--qa-fail));
    background-color: hsl(var(--qa-fail) / 0.12);
    border-color: hsl(var(--qa-fail) / 0.3);
  }
  .qa-pill--partial {
    color: hsl(var(--qa-partial));
    background-color: hsl(var(--qa-partial) / 0.12);
    border-color: hsl(var(--qa-partial) / 0.3);
  }
  .qa-pill--pending {
    color: hsl(var(--qa-pending));
    background-color: hsl(var(--qa-pending) / 0.12);
    border-color: hsl(var(--qa-pending) / 0.3);
  }

  /* Action buttons (tonal to match pills) */
  .qa-btn {
    @apply h-8 px-3 rounded-md text-xs font-medium transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2;
    border: 1px solid transparent;
  }
  .qa-btn--reject {
    color: hsl(var(--qa-btn-reject));
    background-color: hsl(var(--qa-btn-reject) / 0.12) !important;
    border-color: hsl(var(--qa-btn-reject) / 0.3) !important;
  }
  .qa-btn--reject:hover { background-color: hsl(var(--qa-btn-reject) / 0.18) !important; }

  .qa-btn--partial {
    color: hsl(var(--qa-btn-partial));
    background-color: hsl(var(--qa-btn-partial) / 0.12) !important;
    border-color: hsl(var(--qa-btn-partial) / 0.3) !important;
  }
  .qa-btn--partial:hover { background-color: hsl(var(--qa-btn-partial) / 0.18) !important; }

  .qa-btn--accept {
    color: hsl(var(--qa-btn-accept));
    background-color: hsl(var(--qa-btn-accept) / 0.12) !important;
    border-color: hsl(var(--qa-btn-accept) / 0.3) !important;
  }
  .qa-btn--accept:hover { background-color: hsl(var(--qa-btn-accept) / 0.18) !important; }

  /* AI Message Card styles */
  .ai-message-card {
    width: 100%;
    max-width: 100%;
    overflow: hidden;
  }
  
  .ai-message-card .card-content {
    width: 100%;
    overflow: hidden;
  }
  
  /* Table scrolling styles */
  .table-scroll-container {
    width: 100%;
    overflow-x: auto;
    border-radius: 0.5rem;
    border: 1px solid hsl(var(--border));
  }
  
  .table-scroll-container table {
    width: max-content;
    border-collapse: collapse;
    font-size: 0.75rem;
  }

  /* Prevent page horizontal scroll */
  body {
    overflow-x: hidden;
  }
  
  /* Ensure chat container doesn't overflow */
  .chat-container {
    max-width: 100%;
    min-width: 0;
    overflow-x: hidden;
    flex-shrink: 1;
    width: 100%;
    box-sizing: border-box;
    position: relative;
    /* Force container to not expand beyond its parent - account for main sidebar */
    max-width: calc(100vw - 3rem - 2rem) !important; /* 3rem for collapsed sidebar + 2rem padding */
    /* Ensure it takes full available width */
    flex: 1;
  }

  /* When main sidebar is expanded, adjust chat container */
  [data-state="expanded"] ~ * .chat-container {
    max-width: calc(100vw - 16rem - 2rem) !important; /* 16rem for expanded sidebar + 2rem padding */
  }

  /* When commands sidebar is active, adjust chat container */
  .chat-container:has(~ div[class*="w-56"]) {
    max-width: calc(100vw - 3rem - 14rem - 2rem) !important; /* 3rem collapsed sidebar + 14rem commands + 2rem padding */
  }

  /* When main sidebar is expanded AND commands sidebar is active */
  [data-state="expanded"] ~ * .chat-container:has(~ div[class*="w-56"]) {
    max-width: calc(100vw - 16rem - 14rem - 2rem) !important; /* 16rem expanded sidebar + 14rem commands + 2rem padding */
  }

  /* When no sidebars are active, chat container should take full width */
  .chat-container.w-full {
    width: 100% !important;
    max-width: 100% !important;
    flex: none !important;
  }

  /* Account for main app sidebar width (3rem when collapsed, 16rem when expanded) */
  .chat-container.w-full {
    max-width: calc(100vw - 3rem - 2rem) !important; /* 3rem for collapsed sidebar + 2rem padding */
  }

  /* When main sidebar is expanded, adjust for 16rem width */
  [data-state="expanded"] ~ * .chat-container.w-full {
    max-width: calc(100vw - 16rem - 2rem) !important; /* 16rem for expanded sidebar + 2rem padding */
  }

  /* When commands sidebar is active (14rem width), adjust for main sidebar + commands */
  .chat-container.w-full:has(~ div[class*="w-56"]) {
    max-width: calc(100vw - 3rem - 14rem - 2rem) !important; /* 3rem collapsed sidebar + 14rem commands + 2rem padding */
  }

  /* When main sidebar is expanded AND commands sidebar is active */
  [data-state="expanded"] ~ * .chat-container.w-full:has(~ div[class*="w-56"]) {
    max-width: calc(100vw - 16rem - 14rem - 2rem) !important; /* 16rem expanded sidebar + 14rem commands + 2rem padding */
  }

  /* Force chat area to stay within bounds */
  .chat-area {
    max-width: 100%;
    min-width: 0;
    overflow-x: hidden;
    width: 100%;
    box-sizing: border-box;
    position: relative;
    /* Force strict width constraint - account for main sidebar */
    max-width: calc(100vw - 3rem - 4rem) !important; /* 3rem for collapsed sidebar + 4rem padding */
    /* Ensure it takes full available width */
    flex: 1;
  }

  /* When main sidebar is expanded, adjust chat area */
  [data-state="expanded"] ~ * .chat-area {
    max-width: calc(100vw - 16rem - 4rem) !important; /* 16rem for expanded sidebar + 4rem padding */
  }

  /* When commands sidebar is active, adjust chat area */
  .chat-area:has(~ div[class*="w-56"]) {
    max-width: calc(100vw - 3rem - 14rem - 4rem) !important; /* 3rem collapsed sidebar + 14rem commands + 4rem padding */
  }

  /* When main sidebar is expanded AND commands sidebar is active */
  [data-state="expanded"] ~ * .chat-area:has(~ div[class*="w-56"]) {
    max-width: calc(100vw - 16rem - 14rem - 4rem) !important; /* 16rem expanded sidebar + 14rem commands + 4rem padding */
  }

  /* Ensure message cards don't expand beyond container */
  .message-card {
    max-width: 100%;
    min-width: 0;
    overflow: hidden;
    width: 100%;
    box-sizing: border-box;
  }

  /* Ensure table containers are strictly constrained */
  .table-container {
    max-width: 100%;
    min-width: 0;
    overflow: hidden;
    width: 100%;
    box-sizing: border-box;
  }

  /* Table component styles */
  .scrollable-table-container {
    width: 100%;
    max-width: 100%;
    min-width: 0;
    overflow-x: auto;
    border: 1px solid #e5e7eb;
    border-radius: 0.5rem;
  }

  .scrollable-table-container table {
    width: max-content;
    min-width: 0;
    border-collapse: collapse;
  }

  /* Ensure main card doesn't expand */
  .main-chat-card {
    max-width: 100vw;
    overflow: hidden;
    width: 100%;
    box-sizing: border-box;
  }

  /* Force all content within chat to respect container bounds */
  .chat-area > * {
    max-width: 100% !important;
    box-sizing: border-box !important;
  }

  /* Ensure tables don't expand their containers */
  .chat-area table {
    max-width: none !important;
    width: max-content !important;
  }

  /* Allow table containers to scroll */
  .chat-area div[style*="overflow-x: auto"] {
    overflow-x: auto !important;
  }

  /* Only constrain direct children of chat-area, not nested elements */
  .chat-area > div {
    max-width: 100% !important;
    overflow-x: hidden !important;
  }

  /* Prevent any element from expanding beyond the chat container */
  .chat-container * {
    max-width: 100% !important;
    box-sizing: border-box !important;
  }

  /* Allow only table scroll containers to have auto overflow */
  .chat-container div[style*="overflow-x: auto"] {
    overflow-x: auto !important;
    max-width: 100% !important;
  }

  /* Force all other divs to not overflow */
  .chat-container div:not([style*="overflow-x: auto"]) {
    overflow-x: hidden !important;
    max-width: 100% !important;
  }

  /* Specific table wrapper constraints */
  .table-wrapper {
    max-width: 100% !important;
    overflow: hidden !important;
    width: 100% !important;
    box-sizing: border-box !important;
  }

  .table-scroll-wrapper {
    max-width: 100% !important;
    overflow-x: auto !important;
    width: 100% !important;
    box-sizing: border-box !important;
  }

  /* Ensure proper flex layout when sidebars are hidden */
  .flex.flex-1.overflow-hidden {
    width: 100%;
    max-width: 100%;
  }

  /* When no sidebars are active, ensure the flex container takes full width */
  .flex.flex-1.overflow-hidden:not(:has(> div)) {
    width: 100% !important;
    max-width: 100% !important;
  }
}